{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sato2\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\soundserver\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://192.168.10.2:3001\");\nconst playlog = [];\n// 各音楽の再生位置を保存\nconst audioPositions = {\n  0: 0,\n  1: 0,\n  2: 0\n};\nconst music0 = \"/くるみ.mp3\";\nconst music1 = \"/アリア.mp3\";\nconst music2 = \"/gline.mp3\";\nconst IMAGE0 = \"/number5.jpg\";\nconst IMAGE1 = \"/表示画像6.jpg\";\nconst IMAGE2 = \"/jupitor.jpg\";\n\n// 音量の統一設定\nconst NORMALIZED_VOLUME = 0.5;\nfunction App() {\n  _s();\n  const [currentImage, setCurrentImage] = useState(\"\");\n  const [currentAudio, setCurrentAudio] = useState(\"\");\n  const [playing, setPlaying] = useState(false);\n  const [currentMusicId, setCurrentMusicId] = useState(null);\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const audioRef = useRef(null);\n  const formatTime = timeInSeconds => {\n    const minutes = Math.floor(timeInSeconds / 60);\n    const seconds = Math.floor(timeInSeconds % 60);\n    return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n  };\n  const handleTimeUpdate = () => {\n    if (audioRef.current) {\n      setCurrentTime(audioRef.current.currentTime);\n    }\n  };\n  const handleLoadedMetadata = () => {\n    if (audioRef.current) {\n      setDuration(audioRef.current.duration);\n      audioRef.current.currentTime = audioPositions[currentMusicId] || 0;\n      audioRef.current.play().catch(error => {\n        console.error(\"Failed to play audio:\", error);\n      });\n    }\n  };\n  function audioCheck(data, music, image) {\n    if (audioRef.current) {\n      // 現在の再生位置を保存\n      audioPositions[playlog[0]] = audioRef.current.currentTime;\n      audioRef.current.pause();\n    }\n    if (playlog.length === 1) {\n      console.log(`${data}の曲だけ`);\n      setCurrentImage(image);\n      setCurrentAudio(music);\n      setCurrentMusicId(data);\n      setPlaying(true);\n    } else if (playlog[0] === data && playlog[1] === data) {\n      console.log(`${data}の曲を続けて再生`);\n      if (audioRef.current) {\n        if (audioRef.current.paused) {\n          audioRef.current.play().catch(error => {\n            console.error(\"Failed to play audio:\", error);\n          });\n        } else {\n          console.log(\"音楽は既に再生中です\");\n        }\n      }\n    } else if (playlog[0] !== data && playlog[1] === data) {\n      console.log(`${data}の曲を再生`);\n      setCurrentImage(image);\n      setCurrentAudio(music);\n      setCurrentMusicId(data);\n      setPlaying(true);\n    }\n    if (audioRef.current) {\n      audioRef.current.load();\n      // 音量を設定\n      audioRef.current.volume = NORMALIZED_VOLUME;\n    }\n  }\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server\");\n    });\n    socket.on(\"connect_error\", error => {\n      console.error(\"Failed to connect to server\", error);\n    });\n    socket.on(\"data\", data => {\n      if (playlog.length >= 2) {\n        playlog.shift();\n      }\n      if (typeof data === \"object\" && 'result' in data) {\n        playlog.push(data.result);\n\n        // CSVデータを送信（平均値を含む）\n        const timestamp = new Date().toISOString();\n        const csvData = {\n          timestamp: timestamp,\n          value: data.result,\n          audioPosition: audioPositions[data.result] || 0,\n          meanValue: data.meanValue\n        };\n        socket.emit('saveData', csvData);\n\n        // 音楽の切り替え処理\n        switch (data.result) {\n          case 0:\n            audioCheck(data.result, music0, IMAGE0);\n            break;\n          case 1:\n            audioCheck(data.result, music1, IMAGE1);\n            break;\n          case 2:\n            audioCheck(data.result, music2, IMAGE2);\n            break;\n          default:\n            console.log(data);\n            break;\n        }\n      }\n    });\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"connect_error\");\n      socket.off(\"data\");\n    };\n  }, []);\n  useEffect(() => {\n    if (playing && audioRef.current) {\n      audioRef.current.volume = NORMALIZED_VOLUME;\n      audioRef.current.play().catch(error => {\n        console.error(\"Failed to play audio:\", error);\n      });\n    } else if (audioRef.current) {\n      audioRef.current.pause();\n    }\n  }, [playing, currentAudio]);\n  const handleAudioEnded = () => {\n    // 音楽が終了したら、再生位置を0にリセットして再生を開始\n    if (audioRef.current && currentMusicId !== null) {\n      audioRef.current.currentTime = 0;\n      audioPositions[currentMusicId] = 0;\n      setCurrentTime(0);\n      audioRef.current.play().catch(error => {\n        console.error(\"Failed to replay audio:\", error);\n      });\n    }\n  };\n  const handlePlayButtonClick = () => {\n    if (audioRef.current) {\n      audioRef.current.volume = NORMALIZED_VOLUME;\n      audioRef.current.play().catch(error => {\n        console.error(\"Failed to play audio:\", error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u4FE1\\u53F7\\u306B\\u3088\\u308B\\u753B\\u50CF\\u3068BGM\\u306E\\u5207\\u308A\\u66FF\\u3048\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 4\n      }, this), currentImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImage,\n        alt: \"Current\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this), currentAudio && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n          ref: audioRef,\n          src: currentAudio,\n          onEnded: handleAudioEnded,\n          onTimeUpdate: handleTimeUpdate,\n          onLoadedMetadata: handleLoadedMetadata,\n          children: \"\\u304A\\u4F7F\\u3044\\u306E\\u30D6\\u30E9\\u30A6\\u30B6\\u306F\\u30AA\\u30FC\\u30C7\\u30A3\\u30AA\\u30BF\\u30B0\\u3092\\u30B5\\u30DD\\u30FC\\u30C8\\u3057\\u3066\\u3044\\u307E\\u305B\\u3093\\u3002\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"audio-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handlePlayButtonClick,\n            children: \"\\u518D\\u751F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(currentTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \" / \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: formatTime(duration)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"FYCq+j0EuuthUdzcQt0Wg5t8EAI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","Fragment","_Fragment","socket","playlog","audioPositions","music0","music1","music2","IMAGE0","IMAGE1","IMAGE2","NORMALIZED_VOLUME","App","_s","currentImage","setCurrentImage","currentAudio","setCurrentAudio","playing","setPlaying","currentMusicId","setCurrentMusicId","currentTime","setCurrentTime","duration","setDuration","audioRef","formatTime","timeInSeconds","minutes","Math","floor","seconds","toString","padStart","handleTimeUpdate","current","handleLoadedMetadata","play","catch","error","console","audioCheck","data","music","image","pause","length","log","paused","load","volume","on","shift","push","result","timestamp","Date","toISOString","csvData","value","audioPosition","meanValue","emit","off","handleAudioEnded","handlePlayButtonClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","ref","onEnded","onTimeUpdate","onLoadedMetadata","onClick","_c","$RefreshReg$"],"sources":["C:/Users/sato2/OneDrive/ドキュメント/soundserver/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\nimport \"./App.css\";\n\nconst socket = io(\"http://192.168.10.2:3001\");\n\nconst playlog = [];\n// 各音楽の再生位置を保存\nconst audioPositions = {\n    0: 0,\n    1: 0,\n    2: 0\n};\n\nconst music0 = \"/くるみ.mp3\";\nconst music1 = \"/アリア.mp3\";\nconst music2 = \"/gline.mp3\";\n\nconst IMAGE0 = \"/number5.jpg\";\nconst IMAGE1 = \"/表示画像6.jpg\";\nconst IMAGE2 = \"/jupitor.jpg\";\n\n// 音量の統一設定\nconst NORMALIZED_VOLUME = 0.5;\n\nfunction App() {\n\tconst [ currentImage, setCurrentImage ] = useState(\"\");\n\tconst [ currentAudio, setCurrentAudio ] = useState(\"\");\n    const [ playing, setPlaying ] = useState(false);\n    const [currentMusicId, setCurrentMusicId] = useState(null);\n    const [currentTime, setCurrentTime] = useState(0);\n    const [duration, setDuration] = useState(0);\n    const audioRef = useRef(null);\n\n    const formatTime = (timeInSeconds) => {\n        const minutes = Math.floor(timeInSeconds / 60);\n        const seconds = Math.floor(timeInSeconds % 60);\n        return `${minutes}:${seconds.toString().padStart(2, '0')}`;\n    };\n\n    const handleTimeUpdate = () => {\n        if (audioRef.current) {\n            setCurrentTime(audioRef.current.currentTime);\n        }\n    };\n\n    const handleLoadedMetadata = () => {\n        if (audioRef.current) {\n            setDuration(audioRef.current.duration);\n            audioRef.current.currentTime = audioPositions[currentMusicId] || 0;\n            audioRef.current.play().catch(error => {\n                console.error(\"Failed to play audio:\", error);\n            });\n        }\n    };\n\n    function audioCheck(data, music, image) {\n        if (audioRef.current) {\n            // 現在の再生位置を保存\n            audioPositions[playlog[0]] = audioRef.current.currentTime;\n            audioRef.current.pause();\n        }\n\n        if (playlog.length === 1) {\n            console.log(`${data}の曲だけ`);\n            setCurrentImage(image);\n            setCurrentAudio(music);\n            setCurrentMusicId(data);\n            setPlaying(true);\n        } else if (playlog[0] === data && playlog[1] === data) {\n            console.log(`${data}の曲を続けて再生`);\n            if (audioRef.current) {\n                if (audioRef.current.paused) {\n                    audioRef.current.play().catch(error => {\n                        console.error(\"Failed to play audio:\", error);\n                    });\n                } else {\n                    console.log(\"音楽は既に再生中です\");\n                }\n            }\n        } else if (playlog[0] !== data && playlog[1] === data) {\n            console.log(`${data}の曲を再生`);\n            setCurrentImage(image);\n            setCurrentAudio(music);\n            setCurrentMusicId(data);\n            setPlaying(true);\n        }\n\n        if (audioRef.current) {\n            audioRef.current.load();\n            // 音量を設定\n            audioRef.current.volume = NORMALIZED_VOLUME;\n        }\n    }\n\n    useEffect(() => {\n        socket.on(\"connect\", () => {\n            console.log(\"Connected to server\");\n        });\n        socket.on(\"connect_error\", (error) => {\n            console.error(\"Failed to connect to server\", error);\n        });\n        socket.on(\"data\", (data) => {\n            if (playlog.length >= 2) {\n                playlog.shift();\n            }\n            if (typeof(data) === \"object\" && 'result' in data) {\n                playlog.push(data.result);\n                \n                // CSVデータを送信（平均値を含む）\n                const timestamp = new Date().toISOString();\n                const csvData = {\n                    timestamp: timestamp,\n                    value: data.result,\n                    audioPosition: audioPositions[data.result] || 0,\n                    meanValue: data.meanValue\n                };\n                socket.emit('saveData', csvData);\n\n                // 音楽の切り替え処理\n                switch (data.result) {\n                    case 0:\n                        audioCheck(data.result, music0, IMAGE0);\n                        break;\n                    case 1:\n                        audioCheck(data.result, music1, IMAGE1);\n                        break;\n                    case 2:\n                        audioCheck(data.result, music2, IMAGE2);\n                        break;\n                    default:\n                        console.log(data);\n                        break;\n                }\n            }\n        });\n        return () => {\n            socket.off(\"connect\");\n            socket.off(\"connect_error\");\n            socket.off(\"data\");\n        };\n    }, []);\n\n    useEffect(() => {\n        if (playing && audioRef.current) {\n            audioRef.current.volume = NORMALIZED_VOLUME;\n            audioRef.current.play().catch(error => {\n                console.error(\"Failed to play audio:\", error);\n            });\n        } else if (audioRef.current) {\n            audioRef.current.pause();\n        }\n    }, [playing, currentAudio]);\n\n    const handleAudioEnded = () => {\n        // 音楽が終了したら、再生位置を0にリセットして再生を開始\n        if (audioRef.current && currentMusicId !== null) {\n            audioRef.current.currentTime = 0;\n            audioPositions[currentMusicId] = 0;\n            setCurrentTime(0);\n            audioRef.current.play().catch(error => {\n                console.error(\"Failed to replay audio:\", error);\n            });\n        }\n    };\n\n\tconst handlePlayButtonClick = () => {\n\t\tif (audioRef.current) {\n\t\t  audioRef.current.volume = NORMALIZED_VOLUME;\n\t\t  audioRef.current.play().catch(error => {\n\t\t\tconsole.error(\"Failed to play audio:\", error);\n\t\t  });\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t  <header className=\"App-header\">\n\t\t\t<h1>信号による画像とBGMの切り替え</h1>\n\t\t\t{currentImage && <img src={currentImage} alt=\"Current\" />}\n\t\t\t{currentAudio && (\n\t\t\t  <>\n\t\t\t\t<audio\n\t\t\t\t  ref={audioRef}\n\t\t\t\t  src={currentAudio}\n\t\t\t\t  onEnded={handleAudioEnded}\n\t\t\t\t  onTimeUpdate={handleTimeUpdate}\n\t\t\t\t  onLoadedMetadata={handleLoadedMetadata}\n\t\t\t\t>\n\t\t\t\t  お使いのブラウザはオーディオタグをサポートしていません。\n\t\t\t\t</audio>\n\t\t\t\t<div className=\"audio-controls\">\n\t\t\t\t\t<button onClick={handlePlayButtonClick}>再生</button>\n\t\t\t\t\t<div className=\"time-display\">\n\t\t\t\t\t\t<span>{formatTime(currentTime)}</span>\n\t\t\t\t\t\t<span> / </span>\n\t\t\t\t\t\t<span>{formatTime(duration)}</span>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t  </>\n\t\t\t)}\n\t\t  </header>\n\t\t</div>\n    );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}