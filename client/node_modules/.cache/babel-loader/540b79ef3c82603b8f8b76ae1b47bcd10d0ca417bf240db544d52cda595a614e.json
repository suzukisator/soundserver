{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sato2\\\\OneDrive\\\\\\u30C9\\u30AD\\u30E5\\u30E1\\u30F3\\u30C8\\\\\\u52D5\\u753B\\u518D\\u751Fm5stick\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\n//import ReactPlayer from \"react-player\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://192.168.50.24:3001\");\nconst playlog = [];\nconst MUSIC0 = \"client/public/フルートとハープ1.mp3\";\nconst MUSIC1 = \"client/public/月光1.mp3\";\nfunction App() {\n  _s();\n  const [currentImage, setCurrentImage] = useState(\"\");\n  const [currentAudio, setCurrentAudio] = useState(\"\");\n  const [playing, setPlaying] = useState(false);\n  const audioRef = useRef(null);\n  function audioCheck(data, music) {\n    if (playlog.length === 1) {\n      console.log(`playlog[0]:${data}の曲だけ`);\n      setCurrentImage('/good1.jpg');\n      setCurrentAudio(music);\n      setPlaying(true);\n    } else if (playlog[0] === data && playlog[1] === data) {\n      console.log(`playlog[1]:${data}の曲を続けて再生`);\n      return;\n    } else if (playlog[0] !== data && playlog[1] === data) {\n      console.log(`${data}の曲を再生`);\n      setCurrentImage('/s0132_11_0.jpg');\n      setCurrentAudio(music);\n      setPlaying(true);\n    }\n  }\n  useEffect(() => {\n    socket.on(\"connect\", () => {\n      console.log(\"Connected to server\");\n    });\n    socket.on(\"connect_error\", error => {\n      console.error(\"Failed to connect to server\", error);\n    });\n    socket.on(\"data\", data => {\n      console.log(\"data:\", typeof data, data);\n      if (playlog.length >= 2) {\n        playlog.shift();\n      }\n      if (typeof data === \"number\") {\n        playlog.push(data);\n      }\n      console.log(\"playlog:\", playlog);\n      switch (data) {\n        case 0:\n          audioCheck(data, MUSIC0);\n          break;\n        case 1:\n          audioCheck(data, MUSIC1);\n          break;\n        default:\n          console.log(data);\n          break;\n      }\n    });\n    return () => {\n      socket.off(\"connect\");\n      socket.off(\"connect_error\");\n      socket.off(\"data\");\n    };\n  }, [playing]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u4FE1\\u53F7\\u306B\\u3088\\u308B\\u753B\\u50CF\\u3068BGM\\u306E\\u5207\\u308A\\u66FF\\u3048\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }, this), currentImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: currentImage,\n        alt: \"Displayed\",\n        className: \"App-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this), currentAudio && /*#__PURE__*/_jsxDEV(\"audio\", {\n        autoPlay: true,\n        loop: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: currentAudio,\n          type: \"audio/mp3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 6\n        }, this), \"\\u304A\\u4F7F\\u3044\\u306E\\u30D6\\u30E9\\u30A6\\u30B6\\u306F\\u30AA\\u30FC\\u30C7\\u30A3\\u30AA\\u30BF\\u30B0\\u3092\\u30B5\\u30DD\\u30FC\\u30C8\\u3057\\u3066\\u3044\\u307E\\u305B\\u3093\\u3002\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 3\n  }, this);\n}\n_s(App, \"A70CCV3cAkkMTZq5E3vSkbpB0lk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","io","jsxDEV","_jsxDEV","socket","playlog","MUSIC0","MUSIC1","App","_s","currentImage","setCurrentImage","currentAudio","setCurrentAudio","playing","setPlaying","audioRef","audioCheck","data","music","length","console","log","on","error","shift","push","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","autoPlay","loop","type","_c","$RefreshReg$"],"sources":["C:/Users/sato2/OneDrive/ドキュメント/動画再生m5stick/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport io from \"socket.io-client\";\n//import ReactPlayer from \"react-player\";\nimport \"./App.css\";\n\nconst socket = io(\"http://192.168.50.24:3001\");\n\nconst playlog = [];\n\nconst MUSIC0 = \"client/public/フルートとハープ1.mp3\";\nconst MUSIC1 = \"client/public/月光1.mp3\";\n\nfunction App() {\n\tconst [ currentImage, setCurrentImage ] = useState(\"\");\n\tconst [ currentAudio, setCurrentAudio ] = useState(\"\");\n\tconst [ playing, setPlaying ] = useState(false);\n\tconst audioRef = useRef(null);\n\n\tfunction audioCheck(data, music) {\n\t\tif (playlog.length === 1) {\n\t\t\tconsole.log(`playlog[0]:${data}の曲だけ`);\n\t\t\tsetCurrentImage('/good1.jpg');\n\t\t\tsetCurrentAudio(music);\n\t\t\tsetPlaying(true);\n\t\t} else if (playlog[0] === data && playlog[1] === data) {\n\t\t\tconsole.log(`playlog[1]:${data}の曲を続けて再生`);\n\t\t\treturn;\n\t\t} else if (playlog[0] !== data && playlog[1] === data) {\n\t\t\tconsole.log(`${data}の曲を再生`);\n\t\t\tsetCurrentImage('/s0132_11_0.jpg');\n\t\t\tsetCurrentAudio(music);\n\t\t\tsetPlaying(true);\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tsocket.on(\"connect\", () => {\n\t\t\tconsole.log(\"Connected to server\");\n\t\t});\n\t\tsocket.on(\"connect_error\", (error) => {\n\t\t\tconsole.error(\"Failed to connect to server\", error);\n\t\t});\n\t\tsocket.on(\"data\", (data) => {\n\t\t\tconsole.log(\"data:\", typeof(data), data);\n\n\t\t\tif (playlog.length >= 2) {\n\t\t\t\tplaylog.shift();\n\t\t\t}\n\t\t\tif (typeof(data) === \"number\") {\n\t\t\t\tplaylog.push(data);\n\t\t\t}\n\t\t\tconsole.log(\"playlog:\", playlog);\n\t\t\tswitch (data) {\n\t\t\t\tcase 0:\n\t\t\t\t\taudioCheck(data, MUSIC0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\taudioCheck(data, MUSIC1);\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t});\n\t\treturn () => {\n\t\t\tsocket.off(\"connect\");\n\t\t\tsocket.off(\"connect_error\");\n\t\t\tsocket.off(\"data\");\n\t\t};\n\t}, [playing]);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t<h1>信号による画像とBGMの切り替え</h1>\n\t\t\t{currentImage && <img src={currentImage} alt=\"Displayed\" className=\"App-image\" />}\n\t\t\t{currentAudio && (\n\t\t\t\t<audio autoPlay loop>\n\t\t\t\t\t<source src={currentAudio} type=\"audio/mp3\" />\n\t\t\t\t\tお使いのブラウザはオーディオタグをサポートしていません。\n\t\t\t\t</audio>\n\t\t\t)}\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,EAAE,MAAM,kBAAkB;AACjC;AACA,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAGH,EAAE,CAAC,2BAA2B,CAAC;AAE9C,MAAMI,OAAO,GAAG,EAAE;AAElB,MAAMC,MAAM,GAAG,6BAA6B;AAC5C,MAAMC,MAAM,GAAG,uBAAuB;AAEtC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAAEC,YAAY,EAAEC,eAAe,CAAE,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAEc,YAAY,EAAEC,eAAe,CAAE,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAAEgB,OAAO,EAAEC,UAAU,CAAE,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMkB,QAAQ,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAE7B,SAASiB,UAAUA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAChC,IAAId,OAAO,CAACe,MAAM,KAAK,CAAC,EAAE;MACzBC,OAAO,CAACC,GAAG,CAAC,cAAcJ,IAAI,MAAM,CAAC;MACrCP,eAAe,CAAC,YAAY,CAAC;MAC7BE,eAAe,CAACM,KAAK,CAAC;MACtBJ,UAAU,CAAC,IAAI,CAAC;IACjB,CAAC,MAAM,IAAIV,OAAO,CAAC,CAAC,CAAC,KAAKa,IAAI,IAAIb,OAAO,CAAC,CAAC,CAAC,KAAKa,IAAI,EAAE;MACtDG,OAAO,CAACC,GAAG,CAAC,cAAcJ,IAAI,UAAU,CAAC;MACzC;IACD,CAAC,MAAM,IAAIb,OAAO,CAAC,CAAC,CAAC,KAAKa,IAAI,IAAIb,OAAO,CAAC,CAAC,CAAC,KAAKa,IAAI,EAAE;MACtDG,OAAO,CAACC,GAAG,CAAC,GAAGJ,IAAI,OAAO,CAAC;MAC3BP,eAAe,CAAC,iBAAiB,CAAC;MAClCE,eAAe,CAACM,KAAK,CAAC;MACtBJ,UAAU,CAAC,IAAI,CAAC;IACjB;EACD;EAEAhB,SAAS,CAAC,MAAM;IACfK,MAAM,CAACmB,EAAE,CAAC,SAAS,EAAE,MAAM;MAC1BF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACnC,CAAC,CAAC;IACFlB,MAAM,CAACmB,EAAE,CAAC,eAAe,EAAGC,KAAK,IAAK;MACrCH,OAAO,CAACG,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACpD,CAAC,CAAC;IACFpB,MAAM,CAACmB,EAAE,CAAC,MAAM,EAAGL,IAAI,IAAK;MAC3BG,OAAO,CAACC,GAAG,CAAC,OAAO,EAAE,OAAOJ,IAAK,EAAEA,IAAI,CAAC;MAExC,IAAIb,OAAO,CAACe,MAAM,IAAI,CAAC,EAAE;QACxBf,OAAO,CAACoB,KAAK,CAAC,CAAC;MAChB;MACA,IAAI,OAAOP,IAAK,KAAK,QAAQ,EAAE;QAC9Bb,OAAO,CAACqB,IAAI,CAACR,IAAI,CAAC;MACnB;MACAG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEjB,OAAO,CAAC;MAChC,QAAQa,IAAI;QACX,KAAK,CAAC;UACLD,UAAU,CAACC,IAAI,EAAEZ,MAAM,CAAC;UACxB;QACD,KAAK,CAAC;UACLW,UAAU,CAACC,IAAI,EAAEX,MAAM,CAAC;UACxB;QACD;UACCc,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;UACjB;MACF;IACD,CAAC,CAAC;IACF,OAAO,MAAM;MACZd,MAAM,CAACuB,GAAG,CAAC,SAAS,CAAC;MACrBvB,MAAM,CAACuB,GAAG,CAAC,eAAe,CAAC;MAC3BvB,MAAM,CAACuB,GAAG,CAAC,MAAM,CAAC;IACnB,CAAC;EACF,CAAC,EAAE,CAACb,OAAO,CAAC,CAAC;EACb,oBACCX,OAAA;IAAKyB,SAAS,EAAC,KAAK;IAAAC,QAAA,eACnB1B,OAAA;MAAQyB,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC9B1B,OAAA;QAAA0B,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACxBvB,YAAY,iBAAIP,OAAA;QAAK+B,GAAG,EAAExB,YAAa;QAACyB,GAAG,EAAC,WAAW;QAACP,SAAS,EAAC;MAAW;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAChFrB,YAAY,iBACZT,OAAA;QAAOiC,QAAQ;QAACC,IAAI;QAAAR,QAAA,gBACnB1B,OAAA;UAAQ+B,GAAG,EAAEtB,YAAa;UAAC0B,IAAI,EAAC;QAAW;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,4KAE/C;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CACP;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER;AAACxB,EAAA,CAxEQD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AA0EZ,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}